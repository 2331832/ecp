package net.loyin.wechat;

import org.apache.log4j.Logger;

import com.gson.bean.InMessage;
import com.gson.bean.OutMessage;
import com.gson.bean.TextOutMessage;
import com.gson.inf.MessageProcessingHandler;

/**
 * 消息处理
 * @author 龙影
 */
public class MessageProcessingHandlerImpl implements MessageProcessingHandler{
	private static final Logger log=Logger.getLogger(MessageProcessingHandlerImpl.class);
	private OutMessage outMessage;
	@Override
	public void allType(InMessage msg) {
		TextOutMessage out = new TextOutMessage();
		out.setContent("您的消息已经收到！您发送的是"+msg.getMsgType()+"消息");
		setOutMessage(out);
	}

	@Override
	public void textTypeMsg(InMessage msg) {

		
	}

	@Override
	public void locationTypeMsg(InMessage msg) {

		
	}

	@Override
	public void imageTypeMsg(InMessage msg) {

		
	}

	@Override
	public void videoTypeMsg(InMessage msg) {

		
	}

	@Override
	public void linkTypeMsg(InMessage msg) {

		
	}

	@Override
	public void voiceTypeMsg(InMessage msg) {

		
	}

	@Override
	public void verifyTypeMsg(InMessage msg) {

		
	}
	/**菜单点击事件*/
	@Override
	public void eventTypeMsg(InMessage msg) {
		String event=msg.getEvent();//CLICK
		String eventKey=msg.getEventKey();
		log.debug("event:\t"+event+"\teventKey:\t"+eventKey);
		TextOutMessage out = new TextOutMessage();
		String msgContent="";
		if("guniangshop".equals(eventKey)){//古酿商城
			log.debug("古酿商城");
			msgContent="古酿商城";
		}
		if("guniangjiubang".equals(eventKey)){//古酿酒帮
			log.debug("古酿酒帮");
			
			msgContent="古酿酒帮";
		}
		if("bangzhuzhaomu".equals(eventKey)){//帮主招募
			log.debug("帮主招募");
			msgContent="帮主招募";
		}
		if("chakanjiubang".equals(eventKey)){//查看酒帮
			log.debug("查看酒帮");
			msgContent="查看酒帮";
		}
		if("jiarujiubang".equals(eventKey)){//加入酒帮
			log.debug("加入酒帮");
			msgContent="加入酒帮";
		}
		if("gaunyuguniang".equals(eventKey)){//关于古酿
			log.debug("关于古酿");
			msgContent="关于古酿";
		}
		if("zaixiankefu".equals(eventKey)){//在线客服
			log.debug("在线客服");
			msgContent="在线客服";
		}
		out.setContent(msgContent);
		setOutMessage(out);
	}

	@Override
	public void afterProcess(InMessage inMsg, OutMessage outMsg) {
	}

	@Override
	public void setOutMessage(OutMessage outMessage) {
		this.outMessage=outMessage;
	}

	@Override
	public OutMessage getOutMessage() {
		return outMessage;
	}
}
