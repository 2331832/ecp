package net.loyin.wechat;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.text.MessageFormat;
import java.util.List;
import java.util.Map;

import net.loyin.model.sys.WxUser;

import org.apache.log4j.Logger;

import com.alibaba.fastjson.JSONObject;
import com.gson.WeChat;
import com.gson.bean.InMessage;
import com.gson.bean.OutMessage;
import com.gson.bean.TextOutMessage;
import com.gson.inf.MessageProcessingHandler;

/**
 * 消息处理
 * @author 龙影
 */
public class MessageProcessingHandlerImpl implements MessageProcessingHandler{
	private static final Logger log=Logger.getLogger(MessageProcessingHandlerImpl.class);
	private OutMessage outMessage;
	private static String path;
	@Override
	public void allType(InMessage msg) {
		TextOutMessage out = new TextOutMessage();
		out.setContent("您的消息已经收到！您发送的是"+msg.getMsgType()+"消息");
		setOutMessage(out);
	}
	@Override
	public void textTypeMsg(InMessage msg) {
	}
	@Override
	public void locationTypeMsg(InMessage msg) {
	}
	@Override
	public void imageTypeMsg(InMessage msg) {
	}
	@Override
	public void videoTypeMsg(InMessage msg) {
	}
	@Override
	public void linkTypeMsg(InMessage msg) {
	}
	@Override
	public void voiceTypeMsg(InMessage msg) {
	}
	@Override
	public void verifyTypeMsg(InMessage msg) {
	}
	/**菜单点击事件*/
	@Override
	public void eventTypeMsg(InMessage msg) {
		String event=msg.getEvent();//CLICK
		String eventKey=msg.getEventKey();
		String openid=msg.getFromUserName();
		OutMessage out=null;
		String msgContent="";
		try{
			WxUser wxuser=WxUser.dao.findByOpenId(openid);
			if(wxuser==null){
				try{
				wxuser=WxUser.dao.getFromOpenId(openid);
				}catch(Exception e){log.error("获取用户信息异常",e);}
			}
			 String accessToken=WeChat.getAccessToken();
			log.debug("event:\t"+event+"\teventKey:\t"+eventKey);
			int jbm=wxuser.getInt("jbm");//酒帮成员标志
			int typ=wxuser.getInt("typ");//用户类型 0：消费者 1：经销商
			int shopcount=wxuser.getInt("shopcount");//购买次数
			if("MENU1".equals(eventKey)){//古酿商城
				log.debug("古酿商城");
//				msgContent="古酿商城";
			}else
			if("MENU2".equals(eventKey)){//古酿酒帮
				log.debug("古酿酒帮");
//				msgContent="古酿酒帮";
			}else
			if("MENU22".equals(eventKey)){//我的酒帮 返回酒帮的组员情况。
				log.debug("我的酒帮");
				StringBuffer msgStr=new StringBuffer();
				msgStr.append("您的情况如下：\n ");
				msgStr.append("购买次数：");
				msgStr.append(wxuser.get("shopcount"));
				msgStr.append("次，金额：");
				msgStr.append(wxuser.get("amt"));
				msgStr.append("元\n");
				List<WxUser> memberlist= WxUser.dao.find("select * from "+WxUser.tableName+" where jbopenid=? order by amt desc",openid);//查询帮主下的直接成员的销售情况
				String shopmsg="{0}，购买次数：{1}次，金额：{2}元\n";
				if(memberlist!=null&&memberlist.isEmpty()==false){
					msgStr.append("成员情况如下：\n");
					for(WxUser m:memberlist){
						msgStr.append(MessageFormat.format(shopmsg, m.getStr("nickname"),m.get("shopcount"),m.get("amt")));
					}
				}else{
					msgStr.append("您还未有酒帮成员哟，点击【招募成员】来发展您的酒帮吧:)");
				}
				msgContent=msgStr.toString();
			}else
			if("MENU23".equals(eventKey)){//招募成员
				log.debug("招募成员");
				//要判断是否是已经是帮主。
				if(jbm==0&&typ==0){
					msgContent="您还未加入酒帮，请先加入朋友的酒帮，购买商品后才能招募成员哟:)";
				}else if(jbm==1&&typ==0){
					if(shopcount<1&&typ==0){
						msgContent="您还未购买商品，请购买后再试试吧:)";
					}
				}
				else{
					//发送图片消息 先下载二维码到本地
					if(path==null){
						path=this.getClass().getResource("/").getPath().toString().replace("/WEB-INF/classes","/upload/qrcord/").replace("file:/","");
						File f=new File(path);
						f.mkdirs();
					}
					String fname=openid+".jpg";
					File outFile = new File(path+fname);
					if(outFile.exists()==false){
						//创建场景值 生成
						JSONObject json=WeChat.qrcod.createLimitScene(accessToken,wxuser.getLong("id").intValue());
						String picurl=WeChat.qrcod.showqrcodeUrl(json.getString("ticket"));
						URL url = new URL(picurl);
						OutputStream os = new FileOutputStream(outFile);
						InputStream is = url.openStream();
						byte[] buff = new byte[1024];
						while(true) {
							int readed = is.read(buff);
							if(readed == -1) {
								break;
							}
							byte[] temp = new byte[readed];
							System.arraycopy(buff, 0, temp, 0, readed);
							os.write(temp);
						}
						is.close(); 
						os.close();
					}
					Map<String,Object> json= WeChat.uploadMedia(accessToken, "image", outFile);//上传图片到微信
//					media_id	 媒体文件上传后，获取时的唯一标识
//					created_at	 媒体文件上传时间戳
					String media_id=(String)json.get("media_id");
					WeChat.message.SendImage(accessToken, openid, media_id);
//					WeChat.message.sendText(accessToken, openid, "请您的朋友用微信扫描此二维码加入您的酒帮！");
					msgContent="请您的朋友用微信扫描此二维码加入您的酒帮！";
				}
			}else
			if("MENU3".equals(eventKey)){//关于古酿
				log.debug("关于古酿");
				msgContent="关于古酿";
			}else
			if("MENU31".equals(eventKey)){//在线客服
				log.debug("在线客服");
				msgContent="在线客服";
			}else if("subscribe".equals(eventKey)){//首次关注
				log.debug("首次关注");
				msgContent="欢迎您关注我们【古酿定制酒】！";
			}
			if(event.equals("subscribe"))//二维码扫描事件--关注事件
			if(eventKey.startsWith("qrscene_")){
				wxuser.set("jbm",0);
				wxuser.update();
				String sceneVal=eventKey.split("_")[1];
				log.debug("sceneVal:"+sceneVal);
				if(sceneVal!=null&&!"".equals(sceneVal)){//扫描二维码加入酒帮
					Long cjid=Long.parseLong(sceneVal);
//					WeChat.message.sendText(accessToken, openid,WxUser.dao.join(wxuser, cjid));
					msgContent=WxUser.dao.join(wxuser, cjid);
				}
			}
			if(event.equals("SCAN")){//二维码扫描事件
				String sceneVal=eventKey;//获取场景值
				log.debug("sceneVal:"+sceneVal);
				if(sceneVal!=null&&!"".equals(sceneVal)){//扫描二维码加入酒帮
					Long cjid=Long.parseLong(sceneVal);
//					WeChat.message.sendText(accessToken, openid,WxUser.dao.join(wxuser, cjid));
					msgContent=WxUser.dao.join(wxuser, cjid);
				}
			}
			if(event.equals("unsubscribe")){//取消关注 
				log.debug("取消关注:"+wxuser.getStr("nickname")+"\t"+openid+"\t");
				if(jbm>0){
					wxuser.set("jbm",-1);
					wxuser.set("jbopenid","");
					String jbopenid=wxuser.getStr("jbopenid");
					wxuser.update();//重置为非成员和帮主也取消帮主openid绑定
					WeChat.message.sendText(accessToken, jbopenid,"您的成员【"+wxuser.getStr("nickname")+"】已经退出！");
				}
			}
		}catch(Exception e){
			log.error("处理事件消息异常",e);
		//	msgContent="系统运行错误，参数错误！";//出现异常不通知微信用户
		}
		if(out==null&&!"".equals(msgContent)){
			TextOutMessage tout=new TextOutMessage();
			tout.setContent(msgContent);
			out=tout;
		}
		setOutMessage(out);
	}

	@Override
	public void afterProcess(InMessage inMsg, OutMessage outMsg) {
	}

	@Override
	public void setOutMessage(OutMessage outMessage) {
		this.outMessage=outMessage;
	}

	@Override
	public OutMessage getOutMessage() {
		return outMessage;
	}
}
