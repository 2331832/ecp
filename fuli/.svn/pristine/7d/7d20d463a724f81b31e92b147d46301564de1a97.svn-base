package net.loyin.ctrl;

import java.util.Map;

import net.loyin.jfinal.anatation.RouteBind;
import net.loyin.model.sys.WxUser;

import org.apache.log4j.Logger;

import com.alibaba.fastjson.JSON;
import com.gson.WeChat;
import com.gson.oauth.Oauth;
import com.gson.util.ConfKit;
import com.jfinal.core.Controller;

/**
 * 微信入口
 * @author 龙影
 */
@RouteBind(path = "/Webchat")
public class WechatCtrl extends Controller {
	private static Logger log = Logger.getLogger(WechatCtrl.class);
	/** token */
	private static String TOKEN;
	public void init() {
		if (TOKEN == null)
			TOKEN = ConfKit.get("WEIXIN_TOKEN_WT");
	}

	/**
	 * 包括验证及接收消息
	 * 需要传递appid 如http://xxx/Wechat?appid=xxxxxappid
	 */
	/*public void index(){
		init();
		String appid=this.getPara("appid");
		if(appid==null){
			return;
		}else if(!ConfKit.get("AppId").equals(appid)){
			return;
		}
		HttpServletRequest request=this.getRequest();
		String methd = request.getMethod();
		log.debug("访问方法:"+methd);
		if ("GET".equals(methd)){
			*//**
			 * 验证是否为公众平台的接口
			 *//*
			try { 
		        String outPut = "error";
		            String signature = request.getParameter("signature");// 微信加密签名
		            String timestamp = request.getParameter("timestamp");// 时间戳
		            String nonce = request.getParameter("nonce");// 随机数
		            String echostr = request.getParameter("echostr");//
		            // 验证
				if (WeChat.checkSignature(TOKEN, signature, timestamp, nonce)) {
		                outPut = echostr;
		            }
		        this.getResponse().getWriter().write(outPut);
			} catch (Exception e) {
				log.debug("验证公众平台异常", e);
				this.renderNull();
			}
		}else{//微信推送消息过来处理
			HttpServletResponse response=this.getResponse();
			response.setCharacterEncoding("UTF-8");
	        response.setContentType("text/xml");
	        try{
		        ServletInputStream in = request.getInputStream();
		        String xmlMsg = Tools.inputStream2String(in);
		        log.debug("输入消息:================\n" + xmlMsg + "\n================\n");
		        String xml = WeChat.processing(xmlMsg);
		        log.debug("输出消息:================\n" + xml + "\n================\n");
		        response.getWriter().write(xml);
	        }catch(Exception e){
	        	log.error("处理消息异常",e);
	        }
		}
	}*/
	/***
	 * 我的酒帮
	 * 先获取用户信息认证
	 */
	/*public void wdjb(){
		if(WeChat.isWeiXin(this.getRequest())){
			//获取用户认证
		}else{
			this.renderText("您不是通过微信访问，请先关注我们的微信公众号【古酿定制酒】");
		}
	}*/
	/**获取网页授权信息 获取OPENID*/
	public void oauth2(){
		String code=this.getPara("code");
		String state=this.getPara("state");
		String redirect_uri=ConfKit.get("redirect_uri"+state);//跳转连接;
		//获取token
		try {
			String result=Oauth.me.getToken(code);
			Map<String,Object> map=(Map<String,Object>)JSON.parse(result);
			String openid=(String)map.get("openid");
			try{
			WxUser.dao.getFromOpenId(openid);
			}catch(Exception ee){}
			log.debug("跳转URL："+redirect_uri+openid);
//			this.forwardAction(redirect_uri+openid);
			this.renderHtml("<html><script>window.location='"+redirect_uri+openid+"';</script></html>");
//			this.redirect(redirect_uri+openid);
		} catch (Exception e) {
			log.error(e);
			this.renderText("访问异常！");
		}
	}
}
