package net.loyin.wechat;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.net.URL;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import net.loyin.model.sys.WxAnswer;
import net.loyin.model.sys.WxOrder;
import net.loyin.model.sys.WxUser;
import net.loyin.model.sys.WxmenuDetail;

import org.apache.log4j.Logger;

import com.alibaba.fastjson.JSONObject;
import com.gson.WeChat;
import com.gson.bean.Articles;
import com.gson.bean.InMessage;
import com.gson.bean.NewsOutMessage;
import com.gson.bean.OutMessage;
import com.gson.bean.TextOutMessage;
import com.gson.inf.MessageProcessingHandler;
import com.sun.jmx.snmp.Timestamp;

/**
 * 消息处理
 * @author 龙影
 */
public class MessageProcessingHandlerImpl implements MessageProcessingHandler{
	private static final Logger log=Logger.getLogger(MessageProcessingHandlerImpl.class);
	private OutMessage outMessage;
	private static String path;
	@Override
	public void allType(InMessage msg) {
		String content=msg.getContent();
		String openid=msg.getFromUserName();
		TextOutMessage out = new TextOutMessage();
		if(content!=null)
		if(content.startsWith("@")){
			WxUser u=WxUser.dao.findByOpenId(openid);
			String jbopenid=u.getStr("jbopenid");
			if(content.toLowerCase().startsWith("@bz")){//给帮主发送消息
				if(jbopenid==null||"".equals(jbopenid)){
					out.setContent("您还未加入酒帮，加入酒帮后才能与帮主短消息交流！");
				}else{
					try {
						WeChat.message.sendText(WeChat.getAccessToken(),jbopenid,"成员"+u.get("jbn")+"【"+u.getStr("nickname")+"】："+content.substring(3));
					} catch (Exception e) {
						out.setContent("发送消息失败！");
					}
				}
			}else if(content.toLowerCase().startsWith("@all")){//给所有成员发送消息
				List<WxUser>ulist=WxUser.dao.find("select * from "+WxUser.tableName+" where jbopenid=?",openid);
				if(ulist==null||ulist.isEmpty()){
					out.setContent("您还未有成员，请点击【招募成员】菜单来发展您的酒帮吧。");
				}else{
					List ii=new ArrayList();
					for(WxUser u_:ulist){
						try {
							WeChat.message.sendText(WeChat.getAccessToken(),u_.getStr("openid"),"帮主【"+u.getStr("nickname")+"】致所有成员："+content.substring(4));
						} catch (Exception e) {
							ii.add(u_.get("jbn"));
						}
					}
					if(ii.isEmpty()==false)
					out.setContent(ii.size()+"条消息发送失败！未发送成员序号为："+ii.toString());
				}
			}else{//给成员发送消息
				String n=content.substring(1,2);//获取成员序号
				int jbn=0;
				try{
					jbn=Integer.parseInt(n);
					if(jbn==0){
						throw new Exception("成员序号不能为0");
					}
				}catch(Exception e){
					out.setContent("成员序号错误！");
				}
				if(jbn!=0){
					WxUser jbmU=WxUser.dao.findFirst("select * from "+WxUser.tableName+" where jbn=? and jbopenid=?",jbn,openid);
					if(jbmU==null){
						out.setContent("成员不存在，请输入正确的成员序号！");
					}else{
						try {
							WeChat.message.sendText(WeChat.getAccessToken(),jbmU.getStr("openid"),"帮主【"+u.getStr("nickname")+"】："+content.substring(2));
						} catch (Exception e) {
							out.setContent("消息发送失败！");
						}
					}
				}
			}
		}else if(content.toLowerCase().startsWith("del")){//删除成员
			String n=content.substring(3,4);//获取成员序号
			int jbn=0;
			try{
				jbn=Integer.parseInt(n);
				if(jbn==0){
					throw new Exception("成员序号不能为0");
				}
			}catch(Exception e){
				out.setContent("成员序号错误！");
			}
			if(jbn!=0){
				WxUser jbmU=WxUser.dao.findFirst("select * from "+WxUser.tableName+" where jbn=? and jbopenid=?",jbn,openid);
				if(jbmU==null){
					out.setContent("成员不存在，请输入正确的成员序号！");
				}else{
					int jbm=jbmU.getInt("jbm");
					if(jbm!=2){
						jbmU.set("jbopenid",null);
						jbmU.set("jbm",0);//设置为0 为非成员。
						jbmU.update();
						try{
							WeChat.message.sendText(WeChat.getAccessToken(),jbmU.getStr("openid"),"您已经被帮主移除了酒帮！您已可以加入其他的酒帮！");
						}catch(Exception e){}
						out.setContent("已经删除成员"+jbn+" "+jbmU.getStr("nickname")+"！");
					}else{
						out.setContent("该成员已经是帮主了，不能删除！");
					}
				}
			}
		}else{
			out.setMsgType("transfer_customer_service");//所有接收的信息转到多客服系统
			out.setContent(msg.getContent());
		}
		if(out.getContent()!=null&&!"".equals(out.getContent()))
		setOutMessage(out);
	}
	@Override
	public void textTypeMsg(InMessage msg) {
	}
	@Override
	public void locationTypeMsg(InMessage msg) {
	}
	@Override
	public void imageTypeMsg(InMessage msg) {
	}
	@Override
	public void videoTypeMsg(InMessage msg) {
	}
	@Override
	public void linkTypeMsg(InMessage msg) {
	}
	@Override
	public void voiceTypeMsg(InMessage msg) {
	}
	@Override
	public void verifyTypeMsg(InMessage msg) {
	}
	/**菜单点击事件*/
	@Override
	public void eventTypeMsg(InMessage msg) {
		String event=msg.getEvent();//CLICK
		String eventKey=msg.getEventKey();
		String openid=msg.getFromUserName();
		OutMessage out=null;
		String msgContent="";
		try{
			WxUser wxuser=WxUser.dao.findByOpenId(openid);
			if(wxuser==null){
				try{
				wxuser=WxUser.dao.getFromOpenId(openid);
				}catch(Exception e){log.error("获取用户信息异常",e);}
			}
			 String accessToken=WeChat.getAccessToken();
			log.debug("event:\t"+event+"\teventKey:\t"+eventKey);
			Integer jbm=wxuser.getInt("jbm");//酒帮成员标志
			if(jbm==null){
			   jbm=0;
			}
			Integer typ=wxuser.getInt("typ");//用户类型 0：消费者 1：经销商
			if(typ==null){
				typ=0;
			}
			Integer shopcount=wxuser.getInt("shopcount");//购买次数
			if(shopcount==null){
				shopcount=0;
			}
			if("MENU1".equals(eventKey)){//古酿商城
				log.debug("古酿商城");
//				msgContent="古酿商城";
			}else
			if("MENU2".equals(eventKey)){//古酿酒帮
				log.debug("古酿酒帮");
//				msgContent="古酿酒帮";
			}else
			if("MENU22".equals(eventKey)){//我的酒帮 返回酒帮的组员情况。
				log.debug("我的酒帮");
				StringBuffer msgStr=new StringBuffer();
				msgStr.append("您的情况如下：\n ");
				msgStr.append("购买次数：");
				msgStr.append(wxuser.get("shopcount"));
				msgStr.append("次，金额：");
				BigDecimal amt=wxuser.get("amt");
				if(amt==null){
					amt=new BigDecimal(0);
				}
				msgStr.append(amt);
				msgStr.append("元，返利：");
				msgStr.append(wxuser.getBigDecimal("fanli"));
				msgStr.append("元，累计酒帮奖金："+wxuser.getBigDecimal("bonus")+"元，本期酒帮奖金："+wxuser.getBigDecimal("bonus1")+"元，可计酒帮奖返利："+wxuser.getBigDecimal("fanli2")+"元\n");
				//查询帮主下的直接成员的销售情况
				List<WxUser> memberlist= WxUser.dao.find("select * from "+WxUser.tableName+" where jbopenid=? order by amt desc",openid);
				if(memberlist!=null&&memberlist.isEmpty()==false){
					String shopmsg="{0}，购买次数：{1}次，金额：{2}元，返利：{3}元\n";
					msgStr.append("成员情况如下：\n");
					BigDecimal fanli2tj=new BigDecimal(0);
					for(WxUser m:memberlist){
						BigDecimal amt1=m.get("amt");
						if(amt1==null){
							amt1=new BigDecimal(0);
						}
						fanli2tj=fanli2tj.add(m.getBigDecimal("fanli2"));
						msgStr.append(MessageFormat.format(shopmsg,m.getInt("jbn")+" "+ m.getStr("nickname"),m.get("shopcount"),amt1,m.getBigDecimal("fanli")));
					}
				//	msgStr.append("\n本期可计酒帮奖返利总计："+fanli2tj+"元");
				}else{
					msgStr.append(WxAnswer.dao.getRep("00001"));
				}
				msgContent=msgStr.toString();
			}else
			if("MENU23".equals(eventKey)){//招募成员
				log.debug("招募成员"+jbm);
				//判断是否购买商品
				if(typ==0&&shopcount==0){
						msgContent=WxAnswer.dao.getRep("00003");
				}else if(jbm==0){//要判断是否加入酒帮。
					msgContent=WxAnswer.dao.getRep("00002");
				}else if((jbm==1&&typ==0&&shopcount>0)||jbm==2||typ==1){//是帮主或是经营者
					//发送图片消息 先下载二维码到本地
					if(path==null){
						path=this.getClass().getResource("/").getPath().toString().replace("/WEB-INF/classes","/upload/qrcord/").replace("file:/","");
						File f=new File(path);
						f.mkdirs();
					}
					String fname=openid+".jpg";
					File outFile = new File(path+fname);
					if(outFile.exists()==false){
						//创建场景值 生成
						JSONObject json=WeChat.qrcod.createLimitScene(accessToken,wxuser.getLong("id").intValue());
						String picurl=WeChat.qrcod.showqrcodeUrl(json.getString("ticket"));
						URL url = new URL(picurl);
						OutputStream os = new FileOutputStream(outFile);
						InputStream is = url.openStream();
						byte[] buff = new byte[1024];
						while(true) {
							int readed = is.read(buff);
							if(readed == -1) {
								break;
							}
							byte[] temp = new byte[readed];
							System.arraycopy(buff, 0, temp, 0, readed);
							os.write(temp);
						}
						is.close(); 
						os.close();
					}
					Map<String,Object> json= WeChat.uploadMedia(accessToken, "image", outFile);//上传图片到微信
//					media_id	 媒体文件上传后，获取时的唯一标识
//					created_at	 媒体文件上传时间戳
					String media_id=(String)json.get("media_id");
					WeChat.message.SendImage(accessToken, openid, media_id);
//					WeChat.message.sendText(accessToken, openid, "请您的朋友用微信扫描此二维码加入您的酒帮！");
					msgContent=WxAnswer.dao.getRep("00004");
				}
			}else if("MENU21".equals(eventKey)){//我的成员
				StringBuffer msg_=new StringBuffer();
				List<WxUser> jbmlist=WxUser.dao.find("select jbn,nickname,openid,(select count(jbopenid) from "+wxuser.tableName+" where jbopenid=t.openid)cy from "+wxuser.tableName+" t where jbopenid=? order by jbn asc",wxuser.getStr("openid"));
				if(jbmlist==null||jbmlist.isEmpty()){
					if(wxuser.getInt("jbm")!=2){
						msg_.append("您还不是帮主！请先成为帮主吧！");
					}else{
						msg_.append("您还未发展成员！请点击【招募成员】菜单来发展自己的成员吧。");
					}
				}else{
					String mms="序号：{0}昵称：{1}已有成员:{2}人\n";
					for(WxUser u:jbmlist){
						msg_.append(MessageFormat.format(mms, u.get("jbn"),u.get("nickname"),u.get("cy")));
					}
				}
				msgContent=msg_.toString();
			}else if("subscribe".equals(eventKey)){//首次关注
				log.debug("首次关注");
				msgContent=WxAnswer.dao.getRep("00005");
			}
			if(eventKey!=null&&eventKey.startsWith("MENU")){//推送菜单定义的图文、文本消息
				List<WxmenuDetail> detailList=WxmenuDetail.dao.findByKey(eventKey);
				if(detailList!=null&&detailList.isEmpty()==false){
					List<Articles> articlesList=new ArrayList<Articles>();
					for(WxmenuDetail d:detailList){
						String flag=d.getStr("flag");
						if("text".equals(flag)){//发送文本消息
							WeChat.message.sendText(accessToken, openid, d.getStr("conts"));
						}else{//发送图文消息
							Articles a=new Articles();
							a.setDescription(d.getStr("conts"));
							a.setPicUrl(d.getStr("pic"));
							a.setTitle(d.getStr("title"));
							a.setUrl(d.getStr("url"));
							articlesList.add(a);
						}
					}
					//发送图文消息 即news
					if(articlesList!=null&&articlesList.isEmpty()==false){
//					WeChat.message.SendNews(accessToken, openid, articlesList);
						Articles a=articlesList.get(0);
						NewsOutMessage msg_jrjb=new NewsOutMessage();
						msg_jrjb.setTitle(a.getTitle());
						msg_jrjb.setUrl(a.getPicUrl());
						msg_jrjb.setDescription(a.getDescription());
						msg_jrjb.setArticles(articlesList);
						out=msg_jrjb;
					}
				}
			}
			if(event.equals("subscribe"))//二维码扫描事件--关注事件
			if(eventKey.startsWith("qrscene_")){
				wxuser.set("jbm",0);
				wxuser.update();
				String sceneVal=eventKey.split("_")[1];
				log.debug("sceneVal:"+sceneVal);
				if(sceneVal!=null&&!"".equals(sceneVal)){//扫描二维码加入酒帮
					Long cjid=Long.parseLong(sceneVal);
//					WeChat.message.sendText(accessToken, openid,WxUser.dao.join(wxuser, cjid));
					msgContent=WxUser.dao.join(wxuser, cjid);
				}
			}else{
				log.debug("首次关注");
				msgContent=WxAnswer.dao.getRep("00005");	
			}
			if(event.equals("merchant_order")){//微信小店付款通知。
				if("2".equals(msg.getOrderStatus())){//已付款
					log.debug("订单支付");
					//将记录存储到订单表
					try{
						String orderid=msg.getOrderId();
						//获取订单详情
						Map order=WeChat.orderInfo(orderid);
						//if(order.get("errcode").equals("0")){//获取成功
							Map attrs=(Map)order.get("order");
							if(attrs==null){
								return;
							}
							if(attrs.get("order_create_time")!=null){
								Integer time=(Integer)attrs.get("order_create_time");
								attrs.put("order_create_time",new Timestamp(time.longValue()*10000).getDate());
							}
							WxOrder.dao.install(attrs);
							log.debug("保持订单成功！");
						//}
					}catch(Exception e){
						log.error("微信订单：",e);
					}
				}
			}
			if(event.equals("SCAN")){//二维码扫描事件
				String sceneVal=eventKey;//获取场景值
				log.debug("sceneVal:"+sceneVal);
				if(sceneVal!=null&&!"".equals(sceneVal)){//扫描二维码加入酒帮
					Long cjid=Long.parseLong(sceneVal);
//					WeChat.message.sendText(accessToken, openid,WxUser.dao.join(wxuser, cjid));
					msgContent=WxUser.dao.join(wxuser, cjid);
				}
			}
			if(event.equals("unsubscribe")){//取消关注 
				log.debug("取消关注:"+wxuser.getStr("nickname")+"\t"+openid+"\t");
				if(jbm>0){
					String jbopenid=wxuser.getStr("jbopenid");
//					wxuser.set("jbm",-1);
//					wxuser.set("jbopenid","");
//					wxuser.update();//重置为非成员和帮主也取消帮主openid绑定
					wxuser.set("unsubscribe_time",new Date());//取消关注时间
					wxuser.update();
					if(jbopenid!=null&&!"".equals(jbopenid))
					WeChat.message.sendText(accessToken, jbopenid,MessageFormat.format(WxAnswer.dao.getRep("00006"),wxuser.getStr("nickname")));
				}
			}
		}catch(Exception e){
			log.error("处理事件消息异常",e);
		//	msgContent="系统运行错误，参数错误！";//出现异常不通知微信用户
		}
		if(out==null&&!"".equals(msgContent)){
			TextOutMessage tout=new TextOutMessage();
			tout.setContent(msgContent);
			out=tout;
		}
		setOutMessage(out);
	}

	@Override
	public void afterProcess(InMessage inMsg, OutMessage outMsg) {
	}

	@Override
	public void setOutMessage(OutMessage outMessage) {
		this.outMessage=outMessage;
	}

	@Override
	public OutMessage getOutMessage() {
		return outMessage;
	}
}
