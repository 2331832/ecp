package net.loyin.ctrl;

import java.util.Calendar;
import java.util.Date;

import net.loyin.jfinal.anatation.RouteBind;
import net.loyin.model.sys.Article;
import net.loyin.model.sys.MobileApp;
import net.loyin.model.sys.OperaLog;
import net.loyin.model.sys.User;
import net.loyin.model.sys.WxIncome;
import net.loyin.model.sys.WxOrder;
import net.loyin.model.sys.WxUser;
import net.loyin.util.safe.CipherUtil;
import net.loyin.util.safe.MD5;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

@SuppressWarnings("rawtypes")
@RouteBind(path="/")
public class IndexCtrl extends AdminBaseController {
	public void index() {
		Long uid=this.getCurrentUserId();
		User user= this.getCurrentUser();
		if(user==null||uid==null){
			this.renderHTML("login");
			return;
		}
		/*Long onlineUserId=(Long)getSession().getAttribute("onlineUserId");
		if(onlineUserId==null||onlineUserId==0){
			this.renderHTML("login");
			return;
		}*/
		this.setAttr("Login_User",User.dao.findById(uid));
		this.setAttr("nowtime",new Date());
		String ip=this.getIp();
		this.setAttr("IP",ip);
		super.index();
	}
	public void findpwd(){}
//	@Before(LoginValid.class)
	public void login(){
		String userno=this.getPara("userno");
		String pwd=this.getPara("pwd");
		if(userno==null||pwd==null||"".equals(userno)||"".equals(pwd)){
			this.rendJson_(false, "用户名和密码不能为空！");
			return;
		}
		String verify=this.getPara("verify");
		String verify_cookie=this.getCookie("verify");
		if(verify==null||"".equals(verify)){
			this.rendJson_(false,"验证码不能为空！");
			return;
		}
		if(verify_cookie==null||"".equals(verify_cookie)){
			
		}else{
			verify=CipherUtil.encryptData(verify);
		}
		
			pwd=MD5.getMD5ofStr(pwd);
			Record m=Db.findFirst("select * from "+User.tableName+" where (login=? or email=?) and pass=?", new Object[]{userno,userno,pwd});
			if(m!=null&&m.getLong("id")!=0){
				Long uid=m.getLong("id");
				Date time=new Date();
				String ip =this.getIp();
				/**授权人数控制 结束*/
				Db.update("UPDATE "+User.tableName+" SET last_login_ip=?,last_login_time=? WHERE ID=?", new Object[]{ip,dateTimeFormat.format(time),uid});
				Calendar calendar=Calendar.getInstance();
				Long maxTime=84600*30L;//30天
				try {
					calendar.setTime(dateTimeFormat.parse(dateFormat.format(time)+" 23:59:59"));
					maxTime=(calendar.getTimeInMillis()-time.getTime())/1000;
				} catch (Exception e) {}
				this.setCookie("login_user_id",CipherUtil.encryptData(System.currentTimeMillis()+"_"+idGenerater.to62(uid)),maxTime.intValue());
				OperaLog.dao.saveLog(uid, ip, "登录",1);
				this.rendJson_(true, "登录成功");
				return;
			}else{
				this.rendJson_(false, "用户名或密码错误");
				return;
			}
	}
	public void logout(){
		/**记录退出记录*/
		Long uid=this.getCurrentUserId();
		if(uid!=null&&uid!=0){
			OperaLog.dao.saveLog(uid, this.getIp(), "退出",1);
		}
		this.getSession().setAttribute("onlineUserId",null);
		this.removeCookie("login_user_id");
		this.redirect("/");
	}
	private void putURI(){
		String uri=this.getRequest().getRequestURI();
		String url=getRequest().getRequestURL().toString();
		this.setAttr("uri",uri);
		this.setAttr("url",url);
	}
	public void err404(){
		putURI();
	}
	public void err500(){
		putURI();
	}
	/**游戏APP展示*/
	public void yxApp(){
		this.setAttr("list",MobileApp.dao.find("select * from "+MobileApp.tableName+" order by rq desc"));
		this.renderHTML("app/weblist");
	}
	public void yxAddGo(){
		Long id=this.getParaToLong(0);
		MobileApp po=MobileApp.dao.findById(id);
		po.set("lcs", po.getInt("lcs")+1);
		po.update();
		this.redirect(po.getStr("url"));
	}
	public void articleShow(){
		this.setAttr("po", Article.dao.findById(this.getParaToLong(0)));
		this.renderHTML("article/webView");
	}
	public void desktop(){
		//销售总额
		Record r=Db.findFirst("select ifnull(sum(ORDER_TOTAL_PRICE),0) amt from "+WxOrder.tableName);
		this.setAttr("xstotalamt",r.get("amt"));
		//销售订单数量
		r=Db.findFirst("select count(id)ct from "+WxOrder.tableName);
		this.setAttr("ordertotal",r.get("ct"));
		//返利总额
		r=Db.findFirst("select ifnull(sum(amt),0) amt from "+WxIncome.tableName);
		this.setAttr("fanlitotal",r.get("amt"));
		//总关注用户数量
		r=Db.findFirst("select count(id)ct from "+WxUser.tableName);
		this.setAttr("wxusertotal",r.get("ct"));
		//取消关注用户数量
		r=Db.findFirst("select count(id)ct from "+WxUser.tableName+" where unsubscribe_time is not null ");
		this.setAttr("unwxusertotal",r.get("ct"));
		//现有关注用户数量
		r=Db.findFirst("select count(id)ct from "+WxUser.tableName+" where unsubscribe_time is null");
		this.setAttr("nowwxusertotal",r.get("ct"));
		//酒帮数量
		r=Db.findFirst("select count(distinct jbopenid) ct from "+WxUser.tableName);
		this.setAttr("jbtotal",r.get("ct"));
	}
	public void appliForm(){
		//String code=this.getPara("code");
		//获取token
		try {
			//String result=Oauth.me.getToken(code);
			//Map<String,Object> map=(Map<String,Object>)JSON.parse(result);
			String openid=this.getPara("openid");//(String)map.get("openid");
			log.debug("=========微信OPENID="+openid);
			this.setAttr("openid",openid);
			this.setAttr("po",WxUser.dao.findByOpenId(openid));
		} catch (Exception e) {
			log.error(e);
			this.renderText("访问异常！");
		}
	}
	public void saveAppliForm(){
		try {
			WxUser u=(WxUser)this.getModel2(WxUser.class);
			u.update();
			this.rendJson_(true, "保存成功！");
		} catch (Exception e) {
			this.rendJson_(false, "保存异常，请填写正确信息！");
		}
	}
}
