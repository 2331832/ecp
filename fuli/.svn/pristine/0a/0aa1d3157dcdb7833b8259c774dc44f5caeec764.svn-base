package net.loyin.util.wechat;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

import net.loyin.util.PropertiesContent;
import net.loyin.util.wechat.bean.WeChatReqBean;
import net.loyin.util.wechat.bean.WeChatRespNewsBean;
import net.loyin.util.wechat.bean.WeChatRespTextBean;
import net.loyin.util.wechat.bean.weixin.ArticleItem;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.sun.xml.bind.marshaller.CharacterEscapeHandler;

/**
 * 微信封装对象工具类
 */
public class WeChatUtil {
	public static Log log = LogFactory.getLog(WeChatUtil.class);

	/**
	 * 发送文本信息
	 */
	public static void writeTextXml(WeChatReqBean reqBean, Writer out, String content) throws JAXBException {
		JAXBContext jc = JAXBContext.newInstance(WeChatRespTextBean.class);
		Marshaller m = jc.createMarshaller();
		m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
		// m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");// 编码格式
		m.setProperty(CharacterEscapeHandler.class.getName(), new CharacterEscapeHandler() {
			@Override
			public void escape(char[] arg0, int arg1, int arg2, boolean arg3, Writer arg4) throws IOException {
				arg4.write(arg0, arg1, arg2);
			}
		});
		m.setProperty(Marshaller.JAXB_FRAGMENT, Boolean.TRUE);
		WeChatRespTextBean respBean = createRespTextBean(reqBean, content);
		m.marshal(respBean, out);
		// m.marshal(respBean, new PrintWriter(System.out));
	}

	/**
	 * 发送图文信息
	 */
	public static void writePicXml(WeChatReqBean reqBean, Writer out, List<ArticleItem> items) throws JAXBException {
		JAXBContext jc = JAXBContext.newInstance(WeChatRespNewsBean.class);
		Marshaller m = jc.createMarshaller();
		m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
		m.setProperty(CharacterEscapeHandler.class.getName(), new CharacterEscapeHandler() {
			@Override
			public void escape(char[] arg0, int arg1, int arg2, boolean arg3, Writer arg4) throws IOException {
				arg4.write(arg0, arg1, arg2);
			}
		});
		m.setProperty(Marshaller.JAXB_FRAGMENT, Boolean.TRUE);
		WeChatRespNewsBean respBean = createRespPicBean(reqBean, items); // 图文的时候，这里的content=""
		m.marshal(respBean, out);
		// m.marshal(respBean, System.out);
	}

	public static WeChatRespTextBean createRespTextBean(WeChatReqBean reqBean, String content) {
		WeChatRespTextBean respBean = new WeChatRespTextBean();
		respBean.setFromUserName(reqBean.getToUserName());
		respBean.setToUserName(reqBean.getFromUserName());
		respBean.setMsgType("text");
		respBean.setCreateTime(new Date().getTime());
		respBean.setContent(content);
		return respBean;
	}

	public static WeChatRespNewsBean createRespPicBean(WeChatReqBean reqBean, List<ArticleItem> items) {
		WeChatRespNewsBean respBean = new WeChatRespNewsBean();
		respBean.setFromUserName(reqBean.getToUserName());
		respBean.setToUserName(reqBean.getFromUserName());
		respBean.setMsgType("news");
		respBean.setArticleCount(items.size());
		respBean.setItems(items);
		respBean.setCreateTime(new Date().getTime());
		return respBean;
	}

	public static List<ArticleItem> makeArticleItemList(String picUrl, String commentStr, String descriptions, String url) {
		ArticleItem item = makeArticleItem(picUrl, commentStr, descriptions, url);
		List<ArticleItem> list = new ArrayList<ArticleItem>();
		list.add(item);
		return list;
	}

	public static ArticleItem makeArticleItem(String picUrl, String title, String descriptions, String url) {
		String weixin_url_path = PropertiesContent.get("weixin_url_path");
		ArticleItem item = new ArticleItem();
		item.setPicUrl(picUrl.contains("api.map.baidu.com") ? picUrl : weixin_url_path + picUrl);
		item.setTitle(title);
		item.setDescription(descriptions);
		item.setUrl(StringUtils.isBlank(url) ? "" : url);
		return item;
	}

	public static void main(String[] args) {
		WeChatReqBean w = new WeChatReqBean();
		w.setFromUserName("fromUser");
		w.setToUserName("toUser");
		try {
			writeTextXml(w, new PrintWriter(System.out), "测试");
		} catch (JAXBException e) {
			e.printStackTrace();
		}
	}
}
